name: publish

on:
  push:
    branches:
      - master
      - main
  pull_request:
    types:
      - opened
      - synchronize
      - closed
    branches:
      - master
      - main

jobs:
  
  # Code verification #########################################################
  test:
    uses: ptonini-actions/workflows/.github/workflows/tester--units.yaml@main
    if: github.event.action != 'closed' && github.event.head_commit.author.name != 'github-actions[bot]' && vars.skip_testing != 'true'
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  lint:
    uses: ptonini-actions/workflows/.github/workflows/code-linter.yaml@main
    if: github.event_name == 'pull_request' && contains('opened synchronize', github.event.action) && vars.skip_linting != 'true'
  security-scan:
    uses: ptonini-actions/workflows/.github/workflows/action--trufflehog.yaml@main
    if: github.event_name == 'pull_request' && contains('opened synchronize', github.event.action)
  release-please:
    uses: ptonini-actions/workflows/.github/workflows/action--release-please.yaml@main
    if: github.event_name == 'push'
  
  publish-image:
    uses: ptonini-actions/workflows/.github/workflows/handler--containers.yaml@main
    if: github.event_name == 'pull_request' && contains('opened synchronize', github.event.action)
    with:
      tags: ${{ format('latest pr{0} pr{0}-{1}', github.event.number, github.run_number) }}
  
  approve-image:
    uses: ptonini-actions/workflows/.github/workflows/handler--containers.yaml@main
    if: github.event.pull_request.merged
    with:
      action: retag
      source_tag: ${{ format('pr{0}', github.event.number) }}
      tags: latest ${{ vars.pr_approved_tag }}

  promote-image:
    uses: ptonini-actions/workflows/.github/workflows/handler--containers.yaml@main
    if: github.event_name == 'push' && contains(github.event.commits.*.author.name, 'github-actions[bot]')
    with:
      action: retag
      source_tag: ${{ vars.pr_approved_tag }}
      tags: '%MANIFEST_VERSION%'