name: container-handler

on:
  workflow_call:
    inputs:
      action:
        description: ''
        required: false
        default: build-push
        type: string
      repository:
        description: ''
        required: false
        default: ${{ github.event.repository.full_name }}
        type: string
      registry:
        description: ''
        required: false
        default: ghcr.io
        type: string
      tags:
        description: ''
        required: true
        type: string
      source_tag:
        description: ''
        required: false
        type: string
      path:
        description: ''
        required: false
        default: .
        type: string
      release_please_manifest:
        description: ''
        required: false
        default: ${{ vars.release_please_manifest }}
        type: string
    secrets:
      REGISTRY_USERNAME:
        description: ''
        required: false
      REGISTRY_PASSWORD:
        description: ''
        required: false
      BUILD_ARGUMENTS:
        description: ''
        required: false
    outputs:
      digest:
        description: ''
        value: ${{ jobs.container-handler.outputs.digest }}

jobs:
  container-handler:
    runs-on: ubuntu-latest
    steps:
      - run: env | sort
      - run: cat ${GITHUB_EVENT_PATH}
      - uses: docker/setup-buildx-action@v2
      - uses: actions/checkout@v3

      # Login to container registry ###########################################
      - uses: docker/login-action@v2
        with:
          registry: ${{ inputs.registry }}
          username: ${{ env.REGISTRY_USERNAME }}
          password: ${{ env.REGISTRY_PASSWORD }}
        env:
          REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME == '' && github.actor || secrets.REGISTRY_USERNAME }}
          REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD == '' && github.token || secrets.REGISTRY_PASSWORD }}

      # Create TAGS environment variable ######################################
      - name: create container names TAGS environment variable
        run: | 
          export TAGS
          for T in ${{ inputs.tags }}; do
            [[ ${T} == "--MANIFEST-VERSION--" ]] && T=$(jq -r '."${{ inputs.path }}"' < ${{ inputs.release_please_manifest }})
            TAGS+="${{ inputs.registry }}/${{ inputs.repository }}:${T},"
          done
          echo "TAGS=${TAGS}" >> ${GITHUB_ENV}

      # Build/push container image ############################################
      - if: inputs.action == 'build-push'
        uses: ptonini-actions/build-push-image@v1
        id: build-push
        with:
          tags: ${{ env.TAGS }}
          build-args: ${{ inputs.build_arguments }}
          context: ${{ github.workspace }}/${{ inputs.path }}
      - if: inputs.action == 'build-push' && github.event_name == 'pull_request'
        uses: ptonini-actions/set-labels@v1
        with:
          labels: published

      # Re-tag container image ################################################
      - if: inputs.action == 'retag'
        name: retag image
        run: | 
          export IFS=,
          for T in ${TAGS}; do docker buildx imagetools create ${{ inputs.registry }}/${{ inputs.repository }}:${{ inputs.source_tag }} --tag ${T};  done
    outputs:
      digest: ${{ steps.build-push.outputs.digest }}